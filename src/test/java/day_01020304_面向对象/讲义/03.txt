1. 内部类
    就是定义在类中的类。
    为什么将一个类，定义在另一个类的内部？
        因为内部类同外部类有紧密的联系。
        而且可以直接访问外部类的所有成员，包括私有成员。

        集合：  容器。
            比数组更加牛逼的容器。
            遍历：就是将容器中的数据一个一个拿出来。

            for()

            迭代器（对象）：就是另一种遍历的方式。
            我们会学习多种集合，而中集合存数据的方式不同，也就意味着，拿数据的方式也不同。
                所以每种集合，都有其对应的迭代器。

    分类：
        成员内部类：   【理解】
            定义位置：类中方法外。

        Outer o = new Outer();
        // 多态  父接口引用指向子类对象
        Inter i = o.getInner();
        i.show();

        public class Outer {
            private class Inner implements Inter{
                public void show(){}
            }
            public Inter getInner(){
                return new Inner();
            }
        }
        public interface Inter{
            void show();
        }


        局部内部类：   【了解】
            定义位置：方法内部。
            面试题：   【遇见，算你背】
                // 以下代码在编译环境JDK 1.6的情况下，有没有问题？
                public void method() {
                    int num = 10;  // num未被final修饰，而局部变量的生命周期同下面Inner对象的【生命周期】不同，所以报错。
                    // 只能将num用【final】修饰，将其变成常量。
                    // 会将num存入【常量池】，那么这个变量num的生命周期就延长了。
                    // 而JDK 8以后，会默认在num前面加上final.
                    class Inner {
                        public void show() {
                            System.out.println(num);
                        }
                    }
                    Inner i = new Inner();
                    i.show();
                }

        【匿名内部类】：  【掌握】
            本质：
                就是一个接口或者抽象类的没有名字的子类对象。

            格式：
                new 接口或者抽象类(){
                    重写方法;
                };

                1. 定义了一个没有名字的接口或抽象类的子类。
                2. 重写了抽象方法。
                3. 同时创建了对象。

            不适用的场景：
                1、该类的逻辑需要被重复使用。
                2、如果接口中的抽象方法，超过2个以上，不建议使用。

2. Lambda
    JDK 8的最大的新特性。

    可推导，可省略。

    面向函数式编程：
        只关注做什么，不关注怎么做。

    前提：
        必须是函数式接口。
            函数式接口：有且仅有一个抽象方法的接口。

    省略格式：  alt + 回车
        1. 小括号的参数类型可以省略。
        2. 如果只有一个参数，那么类型和小括号都可省略。
        3. 如果方法体中，只有一句话，那么return，大括号，分号，都可以省略。


