1. API 应用程序编程接口
    就是JDK给我们提供的一个一个的方法、类。

    Math: 数学工具类
        int abs(int num);  返回传入数据的绝对值
        int round(double d)  四舍五入
        double ceil(double d)  向上取整
        double floor(double d)  向下取整
        int pow(int a,int b);  获取第一个参数的第二个参数次幂
        int max(int a,int b)  获取两个数的最大值
        double random()   生成一个[0.0,1.0)之间的随机数，包含0.0，不包含1.0

    System: 系统工具类
        void exit(int a)   退出JVM  【别瞎用】
        long currentTimeMillis():  获取当前系统毫秒值
        arraycopy(
                    Object src,    原数组。
                    int srcPos,    原数组拷贝的起始索引
                    Object dest,   目标数组
                    int destPos,   目标数组拷贝的起始索引
                    int length     拷贝的个数
                    ):     数组拷贝
        Properties getProperties()   获取系统信息

    Object 是所有引用数据类型的直接或间接的父类(超类、基类)。
        子类：派生类。

        String toString();             获取对象的字符串标识形式
            Object - 获取对象的地址值，而地址值对我们没有意义。
            所以父类方法，不满足子类需求，子类重写。  快捷键
            重写之后，获取对象的属性值。

        boolean equals(Object obj);    判断两个对象是否相同
            比较两个对象的地址值。
            所以父类方法，不满足子类需求，子类重写。  快捷键
            重写之后，比较的是对象的属性值是否相同。

    BigDecimal: [精确计算][超大型]浮点数
        add()         加
        subtract()    减
        multiply()    乘
        divide()      除

        // ArithmeticException  算术异常，因为两个数相除，除不尽。
        BigDecimal divide = bd1.divide(bd2,2,BigDecimal.ROUND_HALF_UP);

    包装类：
        就是让基本数据类型更加好用。
        箱子：包装类。
        自动装箱：
            基本数据类型 -> 对应的包装类
        自动拆箱：
            包装类 -> 对应的基本数据类型
        int a = Integer.parseInt("123");
        Integer i = 10; // Integer i = Integer.valueOf(10); // 自动装箱
        int b = i;   // int b = i.intValue();  // 自动拆箱

    代码块：
        局部代码块：  【没用】
            就是在方法内部的一对大括号。
            作用：限制局部变量的生命周期
        构造代码块：
            就是定义在类中方法外的一对大括号。
            作用：抽取构造方法中的共性内容。
            执行：每创建对象，会自动执行一次。
        静态代码块：
            就是定义在类中方法外的一对大括号，加上static。
            作用：给该类的静态成员进行初始化。加载驱动。
            执行：随着类的加载，自动执行一次，仅此一次。

    位运算：  【用不到，见得到，贼难】  【了解】
        进制：
            二进制：0 1
            八进制：0 1 2 3 4 5 6 7
            十进制：0 1 2 3 4 5 6 7 8 9
            十六进制：0 1 2 3 4 5 6 7 8 9 a b c d e f

        位运算玩的是二进制。
        计算机底层玩的就是二进制。
        十进制和二进制之间可以相互转换。
        在计算机中，0和1(b bit位)，能标识的数据量太少。
        所以计算机使用8个0或者1，组成一个字节(B)。
            8个0/1能储存的数据量是：-128~127


        byte b = (byte)300; // 44
        byte b = (byte)200; // -56

        面试题：
            2运算得到8，那种计算方式最快。
            2*4=8
            2+6=8
            2 << 2 = 8

        高位位符号位：
            1 = 负数
            0 = 整数

        二进制     -->    十进制：
        0000 0000           0
        0000 0001           1
        0000 0010           2
        0000 0100           4
        0000 1000           8
        0001 0000           16
        0010 0000           32
        0100 0000           64

        100
        0  1  1  0  0  1  0  0
          64 + 32   +  4 = 100


        位运算：
            ^ & | ~
            >> >>> <<
